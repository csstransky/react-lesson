+ React is a JavaScript library created by Facebook
+ Went opensource in 2013
+ React Native: let's you make native mobile apps

+ React docs:
https://reactjs.org/docs/getting-started.html

+ Used by:
Twitter
Netflix
Facebook
Airbnb
Microsoft

+ Generating a React app:
$ npx create-react-app <project name>
$ cd <project name>
$ npm start

+ type "react.new" in a browser to go to a cool website that let's you make React stuff


+ <React.StrictMode> will warn you when you're not following the best practices for React
+ The first element sent to ReactDOM.render(..., ...) is what we want to create (usually an app.js script)
+ The second element tells you where that element is going to be injected
ReactDOM.render(
  React.createElement("h1", {style: {color: "magenta"}}, "Hello from the Children."),
  document.getElementById("root")
);


+ Use JSX (JS as XML) to avoid nesting
+ Let's you write tags directly into the .js files (looks a lot like HTML)
ReactDOM.render(
  <ul>
      <li>Monday</li>
      <li>Tuesday</li>
      <li>Wednesday</li>
  </ul>,
  document.getElementById("root")
);
+ NOTE: JSX does not actually run natively in HTML (of course)

+ Babel is what it's called to get JSX working behind the scenes
https://babeljs.io/repl
+ This is what the code above would look like in Babel (and why we use JSX instead):
ReactDOM.render( /*#__PURE__*/React.createElement("ul", null, /*#__PURE__*/React.createElement("li", null, "Monday"), /*#__PURE__*/React.createElement("li", null, "Tuesday"), /*#__PURE__*/React.createElement("li", null, "Wednesday")), document.getElementById("root"));


+ Components are created by creating a function, and they will return JSX
+ Essentially, if you create functions that return JSX, then you can use them all together in tandem:
function Header() {
    return (
        <header>
            <h1>Cristian's Place</h1>
        </header>
    )
}
function App() {
  return (
    <div className="App">
      <Header />
      <h2>Main</h2>
      <h3>Footer</h3>
    </div>
  );
}
